//
// Zebra.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct Zebra: Codable, Hashable {

    public enum ModelType: String, Codable, CaseIterable {
        case plains = "plains"
        case mountain = "mountain"
        case grevys = "grevys"
    }
    public var type: ModelType?
    public var className: String

    public init(type: ModelType? = nil, className: String) {
        self.type = type
        self.className = className
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case type
        case className
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(type, forKey: .type)
        try container.encode(className, forKey: .className)
    }
}
